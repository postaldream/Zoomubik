# Flutter CI — build release APK and upload artifact
# Trigger: push to main, PRs to main or manual run
name: Flutter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_apk:
    name: Build Android APK
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'

      - name: Cache Pub
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Install dependencies
        run: flutter pub get

      - name: Setup signing (optional, from Secrets)
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          # If KEYSTORE_BASE64 is provided, create the keystore and key.properties
          if [ -n "$KEYSTORE_BASE64" ]; then
            mkdir -p android/app
            echo "$KEYSTORE_BASE64" | base64 --decode > android/app/key.jks
            # Create key.properties using environment variables
            cat > android/key.properties <<EOF
storePassword=${KEYSTORE_PASSWORD}
keyPassword=${KEY_PASSWORD}
keyAlias=${KEY_ALIAS}
storeFile=app/key.jks
EOF
            echo "Keystore and key.properties created"
          else
            echo "No keystore secret provided — building unsigned APK"
          fi

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: zoomubik-apk
          path: build/app/outputs/flutter-apk/app-release.apk
